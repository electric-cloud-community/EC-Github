<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content="text/html; charset=us-ascii" http-equiv="content-type"/>
    <title>@PLUGIN_KEY@ Plugin</title>
    <link rel="stylesheet" href="../../plugins/@PLUGIN_NAME@/pluginhelp.css" type="text/css" media="screen"/>
</head>
<body>
<!--
    Generated by PluginWizardHelp
    https://github.com/electric-cloud/PluginWizardHelp
    Do *NOT* edit manually, use help file generation.
-->
<div class="help">
    <h1>@PLUGIN_KEY@</h1>
    <p>Plugin version @PLUGIN_VERSION@</p>
    
    <p>Revised on September 02, 2020</p>
    
    <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade"/>
    <h1>Contents</h1>
    <ul>
    
    <li><a href="#overview">Overview</a></li>
    
    
    
    
    
    
    
    
    <li><a href="#CreateConfiguration">Plugin Configuration</a></li>
    

    
    <li><a href="#procedures">Plugin Procedures</a></li>
    

    <ul>
        

        <li><a href="#AddIssueComment">Add Issue Comment</a></li>
        

        <li><a href="#CreatePullRequest">Create Pull Request</a></li>
        

        <li><a href="#CreateRelease">Create Release</a></li>
        

        <li><a href="#CreateRepository">Create Repository</a></li>
        

        <li><a href="#DeleteRelease">Delete Release</a></li>
        

        <li><a href="#DownloadReleaseAsset">Download Release Asset</a></li>
        

        <li><a href="#FindPullRequests">Find Pull Requests</a></li>
        

        <li><a href="#GetCommit">Get Commit</a></li>
        

        <li><a href="#GetFiles">Get Files</a></li>
        

        <li><a href="#SetCommitStatus">Set Commit Status</a></li>
        

        <li><a href="#UploadFiles">Upload Files</a></li>
        
    </ul>

    

    
    
    
    
    
    
    
    <li><a href="#releaseNotes">Release Notes</a></li>
</ul>

    
    <h1>Overview</h1>
    <p><p>This plugin integates with Github API.</p>
</p>
    
    
    
    
    
    

    <!--TODO custom blocks-->

    
    <div id="CreateConfiguration">
        <a name='CreateConfiguration' id="CreateConfiguration"> </a>
        <h1>Plugin Configurations</h1>

        <p>
            Plugin configurations are sets of parameters that apply
            across some or all of the plugin procedures. They
            reduce repetition of common values, create
            predefined parameter sets for end users, and
            securely store credentials where needed. Each configuration
            is given a unique name that is entered in designated
            parameters on procedures that use them.<br /><br />
        </p>

        <h3>Creating Plugin Configurations</h3>
        <p>To create plugin configurations in CloudBees CD,
            do these steps:</p>

        <li>Go to <b>Administration</b> &gt; <b>Plugins</b> to open the Plugin Manager.</li>
        <li>Find the @PLUGIN_NAME@ row.</li>
        <li>Click <b>Configure</b> to open the
             Configurations page.</li>
        <li>Click <b>Create Configuration</b> as per the description of parameters below.</li>
        

        <h2>Configuration Procedure Parameters</h2>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                    <td class="required">Configuration Name</td>
                    <td>Unique name for the configuration</td>
                
            </tr>
            
            <tr>
                
                    <td >Description</td>
                    <td>Configuration description</td>
                
            </tr>
            
            <tr>
                
                    <td class="required">REST API Endpoint</td>
                    <td>Endpoint to connect to. By default Github API endpoint.</td>
                
            </tr>
            
            <tr>
                
                    <td class="required">Auth Scheme</td>
                    <td>Authorization scheme for the third-party connection.</td>
                
            </tr>
            
            <tr>
                
                    <td >Check Connection?</td>
                    <td>If checked, the connection endpoint and credentials entered as part of the configuration will be tested. If this option is checked, configuration will not be saved if the test fails.</td>
                
            </tr>
            
            <tr>
                
                    <td >Debug Level</td>
                    <td>This option sets debug level for logs. If info is selected, only summary information will be shown, for debug, there will be some debug information and for trace the whole requests and responses will be shown.</td>
                
            </tr>
            
            </tbody>
        </table>
        
    </div>
    

    

    <h1 id="procedures">Plugin Procedures</h1>
    
    

    
    <div id="AddIssueComment">
        <h2>Add Issue Comment</h2>
        
        
        <p>This procedure can create comments in issues and pull requests.</p>
        
        
        <h3>Add Issue Comment Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>Repository name, in form owner/repo.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Issue or PR Num</td>
                <td>Id of the pull request or issue where comment will be created.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Comment</td>
                <td>Content of the comment. Markdown can be used here.</td>
                
            </tr>
            
            </tbody>
        </table>

        
        <h4>Output Parameters</h4>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td>commentId</td>
                <td>Id of the created comment</td>
            </tr>
            
            </tbody>
        </table>
        

        
    </div>

    
    <div id="CreatePullRequest">
        <h2>Create Pull Request</h2>
        
        
        <p>This procedure will create a pull request for the specified repository.</p>
        
        
        <h3>Create Pull Request Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>Repository name in form owner/name.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Base</td>
                <td>The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Head</td>
                <td>The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch.
</td>
                
            </tr>
            
            <tr>
                
                <td >Title</td>
                <td>The title of the new pull request.</td>
                
            </tr>
            
            <tr>
                
                <td >Body</td>
                <td>The contents of the pull request.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Result Property Sheet</td>
                <td>Property sheet to save PR results</td>
                
            </tr>
            
            </tbody>
        </table>

        
        <h4>Output Parameters</h4>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td>link</td>
                <td>Link to the created pull request</td>
            </tr>
            
            <tr>
                <td>number</td>
                <td>Number of the created pull request</td>
            </tr>
            
            <tr>
                <td>pr</td>
                <td>JSON object that contains PR data</td>
            </tr>
            
            </tbody>
        </table>
        

        
    </div>

    
    <div id="CreateRelease">
        <h2>Create Release</h2>
        
        
        <p>This procedure can create a new Github Release or update an existing one.</p>
        
        
        <h3>Create Release Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>Repository name, in form owner/repo.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">updateAction</td>
                <td>Choose update action - what to do if the release already exists.</td>
                
            </tr>
            
            <tr>
                
                <td >Release Name</td>
                <td>The name for the release.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Tag Name</td>
                <td>Tag name for the release</td>
                
            </tr>
            
            <tr>
                
                <td >Source Commit</td>
                <td>The commit to create a tag from</td>
                
            </tr>
            
            <tr>
                
                <td >Release Body</td>
                <td>Description for the release.</td>
                
            </tr>
            
            <tr>
                
                <td >Release Assets</td>
                <td>Release assets in form {"name": "path/to/file"}
</td>
                
            </tr>
            
            <tr>
                
                <td >Prerelease?</td>
                <td>If checked, the release will be marked as a prerelease</td>
                
            </tr>
            
            <tr>
                
                <td >Delete Old Tag?</td>
                <td>If checked, the old tag associated with the old release will be deleted.</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
    </div>

    
    <div id="CreateRepository">
        <h2>Create Repository</h2>
        
        
        <p>Creates a GitHub Repository</p>
        
        
        <h3>Create Repository Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Owner</td>
                <td>Repository owner, may be either user or organization.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>Repository name.</td>
                
            </tr>
            
            <tr>
                
                <td >Repository Description</td>
                <td>Description for the repository.</td>
                
            </tr>
            
            <tr>
                
                <td >Public?</td>
                <td>Check to create a public repository.</td>
                
            </tr>
            
            <tr>
                
                <td >Teams</td>
                <td>Teams to add to the repository.
E.g. "admins:ADMIN", "users:PUSH".
Teams are newline-separated. Available permissions are ADMIN, PULL and PUSH.
Teams are applicable to the organization only.
</td>
                
            </tr>
            
            <tr>
                
                <td >Branch Protection Rules</td>
                <td>Rules to protect branches, e.g. master: reviewers = 1
</td>
                
            </tr>
            
            <tr>
                
                <td >Add License?</td>
                <td>If checked, a license will be added to the repository.</td>
                
            </tr>
            
            <tr>
                
                <td >License File</td>
                <td>Path to the LICENSE file on the filesystem. If the file does not exist, the procedure will throw an error.</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
    </div>

    
    <div id="DeleteRelease">
        <h2>Delete Release</h2>
        
        
        <p>Deletes a tag and an attached release from Github</p>
        
        
        <h3>Delete Release Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>Repository name, in form owner/repo.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Tag Name</td>
                <td>Tag name to delete. The release will be deleted as well.</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
    </div>

    
    <div id="DownloadReleaseAsset">
        <h2>Download Release Asset</h2>
        
        
        <p>Downloads the specified release asset from Github.</p>
        
        
        <h3>Download Release Asset Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>Repository name, in form owner/repo.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Tag Name</td>
                <td>Tag name for the release</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Asset Name</td>
                <td>Asset name for thhe downloading.</td>
                
            </tr>
            
            <tr>
                
                <td >Asset Path</td>
                <td>Destination path for the downloaded asset.</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
    </div>

    
    <div id="FindPullRequests">
        <h2>Find Pull Requests</h2>
        
        
        <p>This procedure will return all open PRs. If a branch is given, only PR with head at branch will be returned.</p>
        
        
        <h3>Find Pull Requests Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>Repository name, in form owner/repo.</td>
                
            </tr>
            
            <tr>
                
                <td >Branch Name</td>
                <td>Name of the HEAD branch (one that will be merged).</td>
                
            </tr>
            
            </tbody>
        </table>

        
        <h4>Output Parameters</h4>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td>prNum</td>
                <td>Numbers of the found pull request(s).</td>
            </tr>
            
            </tbody>
        </table>
        

        
    </div>

    
    <div id="GetCommit">
        <h2>Get Commit</h2>
        
        
        <p>This procedure retrieves a commit data for the specified SHA</p>
        
        
        <h3>Get Commit Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>Repository name, in form owner/repo.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Commit SHA</td>
                <td>Commit SHA of the commit to set status to.</td>
                
            </tr>
            
            <tr>
                
                <td >Result Property Sheet</td>
                <td>Property sheet to save commit into to.</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
    </div>

    
    <div id="GetFiles">
        <h2>Get Files</h2>
        
        
        <p>This procedure fetches the content of the specified files and stores it in
the filesystem or in the provided property
</p>
        
        
        <h3>Get Files Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Owner</td>
                <td>The name of the user or organization which owns the repository</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>The name of the GH repository.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Files</td>
                <td>The newline-separated list of paths to the files
</td>
                
            </tr>
            
            <tr>
                
                <td >Folder to Save Files</td>
                <td>The folder to save retrieved files, absolute or relative path</td>
                
            </tr>
            
            <tr>
                
                <td >Git Reference</td>
                <td>Reference (branch, commit or tag to download file from)</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
    </div>

    
    <div id="SetCommitStatus">
        <h2>Set Commit Status</h2>
        
        
        <p>Set status for a commit using its SHA</p>
        
        
        <h3>Set Commit Status Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>Repository name, in form owner/repo.</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Commit SHA</td>
                <td>Commit SHA of the commit to set status to.</td>
                
            </tr>
            
            <tr>
                
                <td >State</td>
                <td>State for the commit.</td>
                
            </tr>
            
            <tr>
                
                <td >Target URL</td>
                <td>The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.
</td>
                
            </tr>
            
            <tr>
                
                <td >Mimic Runtime Status</td>
                <td>If selected, the GH status will be posted according to the status of the current CD runtime.</td>
                
            </tr>
            
            <tr>
                
                <td >Description</td>
                <td>A short description of the status.</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
    </div>

    
    <div id="UploadFiles">
        <h2>Upload Files</h2>
        
        
        <p>This procedure uploads the provided files into the provided repository
</p>
        
        
        <h3>Upload Files Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                
                <td class="required">Configuration Name</td>
                <td>Previously defined configuration for the plugin</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Owner</td>
                <td>The name of the user or organization which owns the repository</td>
                
            </tr>
            
            <tr>
                
                <td class="required">Repository Name</td>
                <td>The name of the GH repository.</td>
                
            </tr>
            
            <tr>
                
                <td >Source Directory</td>
                <td>The directory resembling the repository source.
If not provided, the current directory will be used.
The relative paths of the files will be used to provide the path in the repository.
</td>
                
            </tr>
            
            <tr>
                
                <td >Mapping</td>
                <td>A mapping in JSON form to provide the path to file in the repository, e.g.
{'file': "my/file"} where file is the path to the file relative to the source directory.
</td>
                
            </tr>
            
            <tr>
                
                <td >Files</td>
                <td>A list of files relative to the source directory, newline-separated
</td>
                
            </tr>
            
            <tr>
                
                <td >Branch</td>
                <td>A branch name to commit files to.
If not master, the branch will be created from the master branch.
</td>
                
            </tr>
            
            <tr>
                
                <td >Create Pull Request?</td>
                <td>If checked, a PR will be created for the updated files.
</td>
                
            </tr>
            
            </tbody>
        </table>

        

        
    </div>

    

    

    

    

    
    
    
    

    <h1 id="releaseNotes">Release Notes</h1>
    
    <h3>@PLUGIN_KEY@ 3.0.1</h3>
    <ul>
        
        <li>Fixed setup procedure (with proper classpath calculation)</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 3.0.0</h3>
    <ul>
        
        <li>Added "Set Commit Status" procedure</li>
        
        <li>Added "Get Commit" procedure</li>
        
        <li>Added endpoint and bearer authorization scheme to the configuration</li>
        
        <li>Added binary dependencies handling</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.1.1</h3>
    <ul>
        
        <li>Removed default value "files" from the destinationFolder parameter of the Get Files procedure.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.1.0</h3>
    <ul>
        
        <li>Get Files procedure has been added</li>
        
        <li>Upload Files procedure has been added</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.0</h3>
    <ul>
        
        <li>Multiple new procedures have been added.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.2.0</h3>
    <ul>
        
        <li>Create Release procedure has been added.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.1.0</h3>
    <ul>
        
        <li>Create Repository procedure can now add a license file to the repository.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.0.0</h3>
    <ul>
        
        <li>First release.</li>
        
    </ul>
    
</div>
</body>
</html>
